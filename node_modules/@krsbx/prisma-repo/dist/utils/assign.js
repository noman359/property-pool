"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.assignRepositories = void 0;
const lodash_camelcase_1 = __importDefault(require("lodash.camelcase"));
const common_1 = require("./common");
const assignRepositories = (prismaStructures, modelsName, modelStructure, modelTypes, model) => {
    const hasUnique = model.fields.some((field) => field.isUnique);
    const hasRelation = model.fields.some((field) => {
        if (!field.relationFromFields)
            return false;
        return field.relationFromFields.length;
    });
    prismaStructures.push(model.name);
    modelsName.push({
        key: (0, common_1.constantCase)(model.name),
        value: `'${(0, lodash_camelcase_1.default)(model.name)}'`,
    });
    modelStructure.push({
        key: (0, lodash_camelcase_1.default)(model.name),
        value: model.name,
    });
    modelTypes.push({
        key: (0, lodash_camelcase_1.default)(model.name),
        value: {
            CreateInput: `Prisma.${model.name}CreateInput | Prisma.${model.name}UncheckedCreateInput`,
            UpdateInput: `Prisma.${model.name}UpdateInput | Prisma.${model.name}UncheckedUpdateInput`,
            WhereUniqueInput: hasUnique ? `Prisma.${model.name}WhereUniqueInput` : `unknown`,
            OrderByWithRelationInput: `Prisma.${model.name}OrderByWithRelationInput`,
            Include: hasRelation ? `Prisma.${model.name}Include` : `unknown`,
            GroupByOutputType: `Prisma.${model.name}GroupByOutputType`,
            WhereInput: `Prisma.${model.name}WhereInput`,
            Delegate: `Prisma.${model.name}Delegate`,
            Select: `Prisma.${model.name}Select`,
            Return: `Prisma.${model.name}GetPayload<T>`,
        },
    });
};
exports.assignRepositories = assignRepositories;
//# sourceMappingURL=assign.js.map